import com.github.spotbugs.snom.SpotBugsReport

plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'io.freefair.lombok' version '5.1.0'
    id "com.github.spotbugs" version "4.5.0"
    id 'java'
    id 'pmd'
    id 'checkstyle'
}

group = 'com.andersonbco'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper:modelmapper:2.3.0'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_14
    targetCompatibility = JavaVersion.VERSION_14
}

checkstyle {
    toolVersion = '8.35'
    config = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml')
    showViolations = false
}

pmd {
    toolVersion = "6.21.0"
    ruleSets = []
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
}

spotbugsMain {
    reports(({
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
}